---
ocean:
  version: "1"
steps:
  - engines:
    - name: dask-master
      vars:
        - name: private_ip
          value: "{{ engines.dask-master.deployment.nodes.main.private_ip }}"
        - name: port
          value: reserve_port()
        - name: dashboard_port
          value: reserve_port()
        - name: url
          value: "dask://{{ engines.dask-master.vars.private_ip }}:{{ engines.dask-master.vars.port }}"
      orchestrator:
        type: Orchestrator::MainWithWorkers
        deploy_to_main: true
        deploy_to_workers: false
        snapshot:
          registry:
            name: docker_hub
          image:
            name: jupyter/scipy-notebook
          name: latest
        container:
          user: root
          workdir: /work
          mounts:
            engine: /etc/ocean
            data_stores: "{{ engines.dask-master.orchestrator.container.workdir }}"
            ssh: "/home/{{ workspace.user.name }}/.ssh"
          nodes:
            main:
              command: "{{ engines.dask-master.orchestrator.container.mounts.engine }}/startup.sh"
      ui:
        buttons:
          - node_target: main
            label: Dask Master Dashboard
            url: "http://{{ engines.dask-master.ui.buttons.self.node.public_ip }}:{{ engines.dask-master.vars.dashboard_port }}"
  - engines:
      - name: dask-worker
        vars:
          - name: port
            value: reserve_port()
          - name: dashboard_port
            value: reserve_port()
        orchestrator:
          type: Orchestrator::MainWithWorkers
          deploy_to_main: false
          deploy_to_workers: true
          snapshot:
            registry:
              name: docker_hub
            image:
              name: jupyter/scipy-notebook
            name: latest
          container:
            user: root
            workdir: /work
            mounts:
              engine: /etc/ocean
              data_stores: "{{ engines.dask-worker.orchestrator.container.workdir }}"
              ssh: "/home/{{ workspace.user.name }}/.ssh"
            nodes:
              worker:
                command: "{{ engines.dask-worker.orchestrator.container.mounts.engine }}/startup.sh"
        ui:
          buttons:
            - node_target: workers
              label: Dask Worker Dashboard
              url: "http://{{ engines.dask-worker.ui.buttons.self.node.public_ip }}:{{ engines.dask-worker.vars.dashboard_port }}"
  - engines:
    - name: jupyter
      vars:
        - name: jupyter_port
          value: reserve_port()
        - name: jupyter_token
          value: generate_uuid()
      orchestrator:
        type: Orchestrator::MainWithWorkers
        deploy_to_main: true
        deploy_to_workers: false
        snapshot:
          registry:
            name: docker_hub
          image:
            name: jupyter/scipy-notebook
          name: latest
        container:
          user: root
          workdir: /work
          mounts:
            engine: /etc/ocean
            data_stores: "{{ engines.jupyter.orchestrator.container.workdir }}"
            ssh: "/home/{{ workspace.user.name }}/.ssh"
          nodes:
            main:
              command: "{{ engines.jupyter.orchestrator.container.mounts.engine }}/startup.sh"
              env_vars:
                - name: JUPYTER_ENABLE_LAB
                  value: yes
                - name: NB_UID
                  value: "{{ workspace.user.uid }}"
                - name: NB_GID
                  value: "{{ workspace.user.gid }}"
                - name: CHOWN_HOME
                  value: yes
                - name: GRANT_SUDO
                  value: yes
                - name: RESTARTABLE
                  value: yes
                - name: DASK_MASTER
                  value: "{{ engines.dask-master.vars.url }}"
      ui:
        buttons:
          - node_target: main
            label: Jupyter Notebook
            url: "http://{{ engines.jupyter.ui.buttons.self.node.public_ip }}:{{ engines.jupyter.vars.jupyter_port }}?token={{ engines.jupyter.vars.jupyter_token }}"